# Generated by Django 3.2.23 on 2024-01-11 22:54

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(max_length=255, unique=True)),
                ('url_slug', models.SlugField(max_length=255, unique=True)),
                ('featured_image', cloudinary.models.CloudinaryField(default='default_image', max_length=255, verbose_name='image')),
                ('summary', models.TextField(blank=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('content_body', models.TextField()),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('publication_status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Published'), (2, 'Archived')], default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_articles', to=settings.AUTH_USER_MODEL)),
                ('readers', models.ManyToManyField(blank=True, related_name='liked_articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commenter_name', models.CharField(max_length=100)),
                ('commenter_email', models.EmailField(max_length=254)),
                ('comment_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.article')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
